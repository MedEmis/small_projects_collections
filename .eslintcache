[{"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\index.js":"1","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\reportWebVitals.js":"2","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\App.js":"3","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\API.js":"4","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\POSTS\\ListofPosts.js":"5","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\POSTS\\PostItem.js":"6","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\POSTS\\postReducer.js":"7","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\POSTS\\PostComment.js":"8","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\HOOKS\\useScrollPercentage.js":"9","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\Navigation.js":"10","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\CALENDAR\\Calendar.js":"11","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\POSTS\\ListOfPosts.js":"12","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\Loader.js":"13","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\CALENDAR\\calendarReducer.js":"14","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\CALENDAR\\CalendarTOdoList.js":"15","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\CALENDAR\\CalendarView.js":"16","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\CALENDAR\\PopupForTime.js":"17"},{"size":485,"mtime":1610212420950,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":595,"mtime":1610302104554,"results":"21","hashOfConfig":"19"},{"size":1372,"mtime":1610462113675,"results":"22","hashOfConfig":"19"},{"size":2366,"mtime":1610280127657,"results":"23","hashOfConfig":"24"},{"size":1322,"mtime":1610285127492,"results":"25","hashOfConfig":"19"},{"size":1177,"mtime":1610286204896,"results":"26","hashOfConfig":"19"},{"size":665,"mtime":1610271818530,"results":"27","hashOfConfig":"19"},{"size":1236,"mtime":1610272240900,"results":"28","hashOfConfig":"19"},{"size":1476,"mtime":1610387592791,"results":"29","hashOfConfig":"19"},{"size":2677,"mtime":1610459077208,"results":"30","hashOfConfig":"19"},{"size":2628,"mtime":1610365089862,"results":"31","hashOfConfig":"19"},{"size":118,"mtime":1610288564539,"results":"32","hashOfConfig":"19"},{"size":1562,"mtime":1610461870503,"results":"33","hashOfConfig":"19"},{"size":1029,"mtime":1610395379888,"results":"34","hashOfConfig":"19"},{"size":10428,"mtime":1610459459476,"results":"35","hashOfConfig":"19"},{"size":2324,"mtime":1610459860059,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"16oa1du",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18gl5yk",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\index.js",[],["75","76"],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\reportWebVitals.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\App.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\API.js",["77"],"\r\nimport * as axios from \"axios\"\r\n\r\nconst axiosInstance = axios.create({\r\n\tbaseURL: \"https://my-json-server.typicode.com/MedEmis/small_projects_collections/\",\r\n\theaders: {}\r\n})\r\nconst axiosDBlocalhost = axios.create({\r\n\tbaseURL: \"http://localhost:4000/\",\r\n\theaders: { \"Content-Type\": \"application/json\" }\r\n})\r\n\r\nconst URL = {\r\n\tposts: `posts`,\r\n\tcomments: `comments`,\r\n\ttodos: `todos`,\r\n}\r\n\r\nexport const API = {\r\n\tgetPosts: async () => await axiosInstance.get(URL.posts).then(res => res),\r\n\tgetComments: async () => await axiosInstance.get(URL.comments).then(res => res),\r\n\tgetToDos: async () => await axiosInstance.get(URL.todos).then(res => res),\r\n\tsetToDos: async (time, date, event) => await axiosInstance.post(URL.todos, { time, date, event }).then(res => res),\r\n\tdeleteToDos: async (id) => await axiosInstance.delete(`${URL.todos}/${id}`).then(res => res),\r\n}\r\n// export const API = {\r\n// \tgetPosts: async () => await axiosInstance.get(URL.posts).then(res => res),\r\n// \tgetComments: async () => await axiosInstance.get(URL.comments).then(res => res),\r\n// \tgetToDos: async () => await axiosDBlocalhost.get(URL.todos).then(res => res),\r\n// \tsetToDos: async (time, date, event) => await axiosDBlocalhost.post(URL.todos, { time, date, event }).then(res => res),\r\n// \tdeleteToDos: async (id) => await axiosDBlocalhost.delete(`${URL.todos}/${id}`).then(res => res),\r\n// }","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\POSTS\\ListofPosts.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\POSTS\\PostItem.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\POSTS\\postReducer.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\POSTS\\PostComment.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\HOOKS\\useScrollPercentage.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\Navigation.js",["78"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport CalendarBox from './CALENDAR/Calendar';\r\nimport { ListOfPosts } from './POSTS/ListOfPosts';\r\n\r\nexport const routes = [{\r\n\tpath: 'Posts',\r\n\tcomponent: ListOfPosts,\r\n\ttext: \"Does not have Redux or global state. Was used local useReducer. Getting data from jsonplaceholder. \"\r\n}, {\r\n\tpath: 'Organizer',\r\n\tcomponent: CalendarBox,\r\n\ttext: \"Does not have Redux or global state. Was used local useReducer. Getting data from jsonplaceholder server. \"\r\n}, {\r\n\tpath: 'empty1',\r\n\tcomponent: null,\r\n\ttext: \"\"\r\n}, {\r\n\tpath: 'empty2',\r\n\tcomponent: null,\r\n\ttext: \"\"\r\n}, {\r\n\tpath: 'empty3',\r\n\tcomponent: null,\r\n\ttext: \"\"\r\n}]\r\n\r\n\r\n\r\nexport const Navigation = () => {\r\n\tconst [infoBlock, setInfo] = useState()\r\n\tconst [path, setPath] = useState()\r\n\tuseEffect(() => {\r\n\t\troutes.forEach(element => {\r\n\t\t\tif (window.location.pathname === \"/\" + element.path) {\r\n\t\t\t\tsetInfo(prev => element.text)\r\n\t\t\t}\r\n\t\t});\r\n\t})\r\n\treturn (\r\n\t\t<div className=\"navigation\">\r\n\t\t\t<div className=\"navigation__info\">INFO: {infoBlock}</div>\r\n\t\t\t<div className=\"navigation__button-list\">\r\n\t\t\t\t{\r\n\t\t\t\t\troutes.map(item => (item\r\n\t\t\t\t\t\t? <LinkItem path={item.path} key={item.path} setPath={setPath} />\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst LinkItem = ({ path, setPath }) => {\r\n\treturn <Link to={path} className=\"navigation__button-list_button\" onClick={(path) => setPath(path)} >{path}</Link>\r\n}","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\CALENDAR\\Calendar.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\POSTS\\ListOfPosts.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\Loader.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\CALENDAR\\calendarReducer.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\CALENDAR\\CalendarTOdoList.js",[],"C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\CALENDAR\\CalendarView.js",["79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96"],"import React from 'react'\r\nimport \"./calendarViev.scss\"\r\nvar _ = require('lodash');\r\n\r\nconst Days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\nconst Months = [\r\n\t{\r\n\t\tname: \"January\",\r\n\t\tshort: \"Jan\",\r\n\t\tnumber: \"01\",\r\n\t\tdays: 31\r\n\t},\r\n\t{\r\n\t\tname: \"February\",\r\n\t\tshort: \"Feb\",\r\n\t\tnumber: \"02\",\r\n\t\tdays: 28\r\n\t},\r\n\t{\r\n\t\tname: \"March\",\r\n\t\tshort: \"Mar\",\r\n\t\tnumber: \"03\",\r\n\t\tdays: 31\r\n\t},\r\n\t{\r\n\t\tname: \"April\",\r\n\t\tshort: \"Apr\",\r\n\t\tnumber: \"04\",\r\n\t\tdays: 30\r\n\t},\r\n\t{\r\n\t\tname: \"May\",\r\n\t\tshort: \"May\",\r\n\t\tnumber: \"05\",\r\n\t\tdays: 31\r\n\t},\r\n\t{\r\n\t\tname: \"June\",\r\n\t\tshort: \"Jun\",\r\n\t\tnumber: \"06\",\r\n\t\tdays: 30\r\n\t},\r\n\t{\r\n\t\tname: \"July\",\r\n\t\tshort: \"Jul\",\r\n\t\tnumber: \"07\",\r\n\t\tdays: 31\r\n\t},\r\n\t{\r\n\t\tname: \"August\",\r\n\t\tshort: \"Aug\",\r\n\t\tnumber: \"08\",\r\n\t\tdays: 31\r\n\t},\r\n\t{\r\n\t\tname: \"September\",\r\n\t\tshort: \"Sep\",\r\n\t\tnumber: \"9\",\r\n\t\tdays: 30\r\n\t},\r\n\t{\r\n\t\tname: \"October\",\r\n\t\tshort: \"Oct\",\r\n\t\tnumber: \"10\",\r\n\t\tdays: 31\r\n\t},\r\n\t{\r\n\t\tname: \"November\",\r\n\t\tshort: \"Nov\",\r\n\t\tnumber: \"11\",\r\n\t\tdays: 30\r\n\t},\r\n\t{\r\n\t\tname: \"December\",\r\n\t\tshort: \"Dec\",\r\n\t\tnumber: \"12\",\r\n\t\tdays: 31\r\n\t}\r\n];\r\n\r\nexport class CalendarView extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tselectedDate: this.props.defaultDate ? new Date(this.props.defaultDate) : new Date(),\r\n\t\t\tcurrentView: new Date(),\r\n\t\t\tevents: this.props.events ? this.props.events : []\r\n\r\n\t\t};\r\n\t\tthis.eventIndex = {}\r\n\t\tthis.updateEventIndex = this.updateEventIndex.bind(this)\r\n\t\tthis.renderDays = this.renderDays.bind(this);\r\n\t}\r\n\tupdateEventIndex() {\r\n\t\tthis.eventIndex = {}\r\n\t\tthis.eventDateIndex = {}\r\n\t\tthis.state.events.forEach(x => {\r\n\t\t\tlet splits = x.date.split(\"-\").map(x => parseInt(x))\r\n\t\t\t//////////////////////////////////console.log(splits)\r\n\t\t\tthis.eventIndex[\"E\" + splits[0]] = this.eventIndex[\"E\" + splits[0]] ? this.eventIndex[\"E\" + splits[0]] : {}\r\n\t\t\tthis.eventIndex[\"E\" + splits[0]][\"E\" + splits[1]] = this.eventIndex[\"E\" + splits[0]][\"E\" + splits[1]] ? this.eventIndex[\"E\" + splits[0]][\"E\" + splits[1]] : []\r\n\t\t\tthis.eventIndex[\"E\" + splits[0]][\"E\" + splits[1]].push(x)\r\n\r\n\t\t\tthis.eventDateIndex[\"E\" + splits[0]] = this.eventDateIndex[\"E\" + splits[0]] ? this.eventDateIndex[\"E\" + splits[0]] : {}\r\n\t\t\tthis.eventDateIndex[\"E\" + splits[0]][\"E\" + splits[1]] = this.eventDateIndex[\"E\" + splits[0]][\"E\" + splits[1]] ? this.eventDateIndex[\"E\" + splits[0]][\"E\" + splits[1]] : []\r\n\t\t\tthis.eventDateIndex[\"E\" + splits[0]][\"E\" + splits[1]].push(x.date)\r\n\t\t})\r\n\t\t//////////////////////////////console.log(\"eventIndex\", this.eventIndex)\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.updateEventIndex()\r\n\t\tthis.props.getDataTime(this.state.selectedDate.toLocaleDateString())\r\n\t}\r\n\trenderDays() {\r\n\t\tlet currentMonth = parseInt(this.state.currentView.getMonth())\r\n\t\tlet currentMonthInfo = Months[currentMonth];\r\n\t\tlet prevMonthInfo = Months[currentMonth - 1 < 0 ? Months.length - 1 : currentMonth - 1]\r\n\t\tlet nextMonthInfo = Months[currentMonth + 1 > Months.length - 1 ? 0 : currentMonth + 1]\r\n\t\tlet currentYear = this.state.currentView.getFullYear();\r\n\t\tlet prevMonthYear = currentYear\r\n\t\tlet nextMonthYear = currentYear\r\n\t\tconst total = 42\r\n\r\n\t\tif (currentMonthInfo.name == \"February\") {\r\n\t\t\tcurrentMonthInfo.days = (new Date(currentYear + \"-\" + \"Feb-29\").getMonth() == 2 ? false : true) | currentMonthInfo.days\r\n\t\t}\r\n\t\telse if (prevMonthInfo.name == \"February\") {\r\n\t\t\tprevMonthInfo.days = (new Date(currentYear + \"-\" + \"Feb-29\").getMonth() == 2 ? false : true) | prevMonthInfo.days\r\n\t\t}\r\n\t\telse if (nextMonthInfo.name == \"February\") {\r\n\t\t\tnextMonthInfo.days = (new Date(currentYear + \"-\" + \"Feb-29\").getMonth() == 2 ? false : true) | nextMonthInfo.days\r\n\t\t}\r\n\r\n\t\tif (currentMonthInfo.name == \"January\") {\r\n\t\t\tprevMonthYear = currentYear - 1\r\n\t\t}\r\n\t\tif (currentMonthInfo.name == \"December\") {\r\n\t\t\tnextMonthYear = currentYear + 1\r\n\t\t}\r\n\r\n\t\tlet tempday = new Date(currentYear + \"-\" + currentMonthInfo.name + \"-01\").getDay()\r\n\t\t/////////////////////////////console.log(\"days\", tempday)\r\n\t\tlet requiredprev = (7) - (7 - tempday);\r\n\t\tlet requirednext = 42 - (requiredprev + currentMonthInfo.days);\r\n\t\t/////////////////////////////console.log(requiredprev, requirednext)\r\n\r\n\t\tlet prevdays = requiredprev > 0 ? Array(requiredprev).fill({}).map((x, key) => {\r\n\t\t\tx = {}\r\n\t\t\tlet day = prevMonthInfo.days - key\r\n\t\t\tx.day = day\r\n\t\t\tx.monthType = \"prev\"\r\n\t\t\tx.year = prevMonthYear;\r\n\t\t\tlet dateString = (day < 10 ? \"0\" + day : day) + \"-\" + prevMonthInfo.name + \"-\" + prevMonthYear\r\n\t\t\tx.dateString = dateString\r\n\t\t\tlet date = new Date(dateString)\r\n\t\t\tx.date = date\r\n\t\t\tx.dayName = Days[date.getDay()]\r\n\t\t\treturn x;\r\n\t\t}) : [];\r\n\t\tprevdays.reverse()\r\n\t\tlet nextdays = requirednext > 0 ? Array(requirednext).fill({}).map((x, key) => {\r\n\t\t\tx = {}\r\n\t\t\tlet day = 1 + key\r\n\t\t\tx.day = day\r\n\t\t\tx.monthType = \"next\"\r\n\t\t\tx.year = nextMonthYear;\r\n\t\t\tlet dateString = (day < 10 ? \"0\" + day : day) + \"-\" + nextMonthInfo.name + \"-\" + nextMonthYear\r\n\t\t\tx.dateString = dateString\r\n\t\t\tlet date = new Date(dateString)\r\n\t\t\tx.date = date\r\n\t\t\tx.dayName = Days[date.getDay()]\r\n\t\t\treturn x;\r\n\t\t}) : [];\r\n\r\n\t\tlet calendar = []\r\n\t\tcalendar.push(...prevdays)\r\n\t\tlet days = Array(currentMonthInfo.days).fill({}).map((x, key) => {\r\n\t\t\tx = {}\r\n\t\t\tlet day = 1 + key\r\n\t\t\tx.day = day\r\n\t\t\tx.monthType = \"current\"\r\n\t\t\tx.year = currentYear;\r\n\t\t\tlet dateString = (day < 10 ? \"0\" + day : day) + \"-\" + currentMonthInfo.name + \"-\" + currentYear\r\n\t\t\tx.dateString = dateString\r\n\t\t\tlet date = new Date(dateString)\r\n\t\t\tx.date = date\r\n\t\t\tx.dayName = Days[date.getDay()]\r\n\t\t\treturn x;\r\n\t\t})\r\n\t\t/////////////////////////////console.log(currentMonthInfo.days, days)\r\n\t\tcalendar.push(...days)\r\n\t\tcalendar.push(...nextdays)\r\n\t\tlet result = _.chunk(calendar, 7)\r\n\t\tresult = result.filter(x => {\r\n\t\t\treturn x.length == 7\r\n\t\t})\r\n\t\tlet selectedDate = this.state.selectedDate.toLocaleDateString()\r\n\r\n\t\t/////////////////////////////console.log(this.eventIndex)\r\n\r\n\t\treturn result.map((x, key) => {\r\n\t\t\treturn <tr key={key}>{x.map((y, key) => {\r\n\t\t\t\tlet event = false;\r\n\t\t\t\tlet classList = \"calendar-day calendar-month-\" + y.monthType\r\n\r\n\t\t\t\tif (y.dayName == \"Sun\") {\r\n\t\t\t\t\tclassList += \" calendar-holiday-\" + y.monthType\r\n\t\t\t\t}\r\n\t\t\t\tif (selectedDate == y.date.toLocaleDateString()) {\r\n\t\t\t\t\tclassList += \" calendar-selected-date\"\r\n\t\t\t\t}\r\n\t\t\t\tif (this.eventDateIndex) {\r\n\t\t\t\t\tlet year = y.date.getFullYear()\r\n\t\t\t\t\tif (this.eventDateIndex[\"E\" + year]) {\r\n\t\t\t\t\t\tlet month = y.date.getMonth() + 1;\r\n\t\t\t\t\t\tif (this.eventDateIndex[\"E\" + year][\"E\" + month]) {\r\n\t\t\t\t\t\t\tif (this.eventDateIndex[\"E\" + year][\"E\" + month] && this.eventDateIndex[\"E\" + year][\"E\" + month].includes(y.dateString)) {\r\n\t\t\t\t\t\t\t\tevent = true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn <td key={key} align=\"center\" className={classList} onClick={() => {\r\n\t\t\t\t\tlet sd = new Date(y.dateString);\r\n\t\t\t\t\t/////////////////////////////console.log(y)\r\n\t\t\t\t\tthis.setState({ selectedDate: y.date }, () => {\r\n\t\t\t\t\t\tif (this.props.getDataTime) {\r\n\t\t\t\t\t\t\tthis.props.getDataTime(y.date.toLocaleDateString())\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{event ? <div className=\"day\"><div className=\"event-round\">{y.day}</div></div> : <div className=\"day\">{y.day}</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</td>\r\n\t\t\t})}</tr>\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet date = \"\";\r\n\t\tlet month = \"\";\r\n\t\tlet year = \"\"\r\n\t\tlet selectedDate = \"\"\r\n\t\ttry {\r\n\t\t\tdate = this.state.selectedDate\r\n\t\t\t\t.toISOString()\r\n\t\t\t\t.substr(0, 10)\r\n\t\t\t\t.split(\"-\")\r\n\t\t\t\t.reverse()\r\n\t\t\t\t.join(\"-\");\r\n\t\t\tmonth = Months[this.state.currentView.getMonth()].name\r\n\t\t\tyear = this.state.currentView.getFullYear()\r\n\t\t\tselectedDate = this.state.selectedDate.toLocaleDateString(\"en-gb\")\r\n\t\t\tselectedDate = selectedDate.split(\"/\").join(\"-\")\r\n\t\t\t/////////////////////////////console.log(\"selectedDate\", selectedDate)\r\n\t\t} catch (e) { console.log(e); }\r\n\t\treturn (\r\n\t\t\t<div className=\"cks-calendar\">\r\n\t\t\t\t<div className=\"calendar-toolbar\">\r\n\t\t\t\t\t<table>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<td width=\"100\" align=\"left\">\r\n\t\t\t\t\t\t\t\t<h5>{month} <small style={{ fontSize: \"5px\", verticalAlign: \"middle\" }}>&#9899;</small> {year}</h5>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td width=\"100\" align=\"right\">\r\n\t\t\t\t\t\t\t\t<div className=\"button-group\">\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" disabled value={selectedDate} style={{ width: \"35%\" }} ></input>\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn px-2\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.setState(prev => {\r\n\t\t\t\t\t\t\t\t\t\t\tprev.currentView.setMonth(prev.currentView.getMonth() - 1)\r\n\t\t\t\t\t\t\t\t\t\t\treturn prev;\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}}><i className=\"button-group_button\">{\"<MONTH\"}</i></button>\r\n\t\t\t\t\t\t\t\t\t<button className=\"button-group_button btn today \" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.setState({ currentView: new Date(), selectedDate: new Date() })\r\n\t\t\t\t\t\t\t\t\t\tthis.props.getDataTime(this.state.selectedDate)\r\n\t\t\t\t\t\t\t\t\t}}><i className=\"button-group_button\">TODAY</i></button>\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn px-2\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tthis.setState(prev => {\r\n\t\t\t\t\t\t\t\t\t\t\tprev.currentView.setMonth(prev.currentView.getMonth() + 1)\r\n\t\t\t\t\t\t\t\t\t\t\treturn prev;\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}}><i className=\"button-group_button\">{\"MONTH>\"}</i></button></div>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<table className=\"calendar-table\">\r\n\t\t\t\t\t<tr className=\"calendar-days-tr\">\r\n\t\t\t\t\t\t{Days.map((x, key) => (\r\n\t\t\t\t\t\t\t<td className=\"calendar-days-td\" key={key} align=\"center\">\r\n\t\t\t\t\t\t\t\t<div width=\"500\">{x}</div></td>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t{this.renderDays()}\r\n\t\t\t\t</table>\r\n\t\t\t\t<div className=\"row mt-3\" style={{ display: \"flex\", justifyContent: \"space-around\", marginTop: \"20px\" }} >\r\n\t\t\t\t\t<div className=\"col-sm-3\">\r\n\t\t\t\t\t\t<div className=\"calendar-selected-date\" />\r\n\t\t\t\t\t\t<h5 style={{ fontSize: \"14px\", color: \"#212121\" }}>Selected Date</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-3\">\r\n\t\t\t\t\t\t<div className=\"calendar-holiday-current\" />\r\n\t\t\t\t\t\t<h5 style={{ fontSize: \"14px\", color: \"#212121\" }}>Holiday</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-sm-3 day\">\r\n\t\t\t\t\t\t<div style={{ height: \"35px\", width: \"35px\", borderRadius: \"17px\", backgroundColor: \"#4285f4\", lineHeight: \"35px\", color: \"#fff\" }}><center>#</center></div>\r\n\t\t\t\t\t\t<h5 style={{ fontSize: \"14px\", color: \"#212121\" }}>Event Dot</h5>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/* demo code */\r\n\r\nDate.prototype.addDays = function (days) {\r\n\tthis.setDate(this.getDate() + parseInt(days));\r\n\treturn this;\r\n}\r\nlet eventDate = new Date()\r\neventDate.addDays(5);\r\neventDate = eventDate.toISOString().substr(0, 10)\r\n/////////////////////////////console.log(eventDate)\r\n/*  */\r\n\r\n","C:\\Users\\draga\\Desktop\\REACT APPS\\react_API_practice\\my-api-practice\\src\\PAGES\\CALENDAR\\PopupForTime.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":8,"column":7,"nodeType":"103","messageId":"104","endLine":8,"endColumn":23},{"ruleId":"101","severity":1,"message":"105","line":32,"column":9,"nodeType":"103","messageId":"104","endLine":32,"endColumn":13},{"ruleId":"101","severity":1,"message":"106","line":122,"column":9,"nodeType":"103","messageId":"104","endLine":122,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":124,"column":29,"nodeType":"109","messageId":"110","endLine":124,"endColumn":31},{"ruleId":"111","severity":1,"message":"112","line":125,"column":56,"nodeType":"109","messageId":"113","endLine":125,"endColumn":57},{"ruleId":"107","severity":1,"message":"108","line":125,"column":79,"nodeType":"109","messageId":"110","endLine":125,"endColumn":81},{"ruleId":"107","severity":1,"message":"108","line":127,"column":31,"nodeType":"109","messageId":"110","endLine":127,"endColumn":33},{"ruleId":"111","severity":1,"message":"112","line":128,"column":53,"nodeType":"109","messageId":"113","endLine":128,"endColumn":54},{"ruleId":"107","severity":1,"message":"108","line":128,"column":76,"nodeType":"109","messageId":"110","endLine":128,"endColumn":78},{"ruleId":"107","severity":1,"message":"108","line":130,"column":31,"nodeType":"109","messageId":"110","endLine":130,"endColumn":33},{"ruleId":"111","severity":1,"message":"112","line":131,"column":53,"nodeType":"109","messageId":"113","endLine":131,"endColumn":54},{"ruleId":"107","severity":1,"message":"108","line":131,"column":76,"nodeType":"109","messageId":"110","endLine":131,"endColumn":78},{"ruleId":"107","severity":1,"message":"108","line":134,"column":29,"nodeType":"109","messageId":"110","endLine":134,"endColumn":31},{"ruleId":"107","severity":1,"message":"108","line":137,"column":29,"nodeType":"109","messageId":"110","endLine":137,"endColumn":31},{"ruleId":"107","severity":1,"message":"108","line":195,"column":20,"nodeType":"109","messageId":"110","endLine":195,"endColumn":22},{"ruleId":"107","severity":1,"message":"108","line":206,"column":19,"nodeType":"109","messageId":"110","endLine":206,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":209,"column":22,"nodeType":"109","messageId":"110","endLine":209,"endColumn":24},{"ruleId":"101","severity":1,"message":"114","line":224,"column":10,"nodeType":"103","messageId":"104","endLine":224,"endColumn":12},{"ruleId":"101","severity":1,"message":"115","line":246,"column":4,"nodeType":"103","messageId":"104","endLine":246,"endColumn":8},{"ruleId":"116","severity":1,"message":"117","line":319,"column":1,"nodeType":"118","messageId":"110","endLine":322,"endColumn":2},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'axiosDBlocalhost' is assigned a value but never used.","Identifier","unusedVar","'path' is assigned a value but never used.","'total' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'sd' is assigned a value but never used.","'date' is assigned a value but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","no-global-assign","no-unsafe-negation"]